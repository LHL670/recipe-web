{"version":3,"sources":["todoform.js","todolist.js","ToDoTitle.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","todoRef","React","createRef","addItemOnList","e","preventDefault","todoItem","todo","current","value","isCompleted","props","addToDoItems","currentTarget","reset","id","onSubmit","this","type","name","ref","required","Component","TodoList","handleChange","event","updateTodo","todoItems","console","log","updateTodos","index","toggleCheckbox","checked","className","onChange","onClick","removeToDoItem","headerStyle","color","background","width","Header","style","App","state","item","items","Date","now","setState","todos","key","updatedTodo","Object","keys","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25cb7633.chunk.js","sourcesContent":["import React from \"react\";\n\nclass TodoForm extends React.Component {\n  todoRef = React.createRef();\n\n  addItemOnList = e => {\n    e.preventDefault();\n    const todoItem = {\n      todo: this.todoRef.current.value,\n      isCompleted: false\n    };\n    this.props.addToDoItems(todoItem);\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form id=\"todoList-form\" onSubmit={this.addItemOnList}>\n        <input type=\"text\" name=\"todosTxtbx\" ref={this.todoRef} required />\n        <button>ADD</button>\n      </form>\n    );\n  }\n}\n\nexport default TodoForm;","import React from \"react\";\nimport'./done.css';\n\nclass TodoList extends React.Component {\n\thandleChange = event => {\n\tconst updateTodo = {\n\t\t...this.props.todoItems,\n\t\t[event.currentTarget.name]: event.currentTarget.value\n\t};\n\tconsole.log(event.currentTarget.value);\n\tthis.props.updateTodos(this.props.index, updateTodo);\n\t};\n\n\ttoggleCheckbox = event => {\n\tconst updateTodo = {\n\t\t...this.props.todoItems,\n\t\t[event.currentTarget.name]: event.currentTarget.checked\n\t};\n\t\n\tthis.props.updateTodos(this.props.index, updateTodo);\n\t};\n\n\trender() {\n\treturn (\n\t\t<li className={this.props.todoItems.isCompleted ? \"done\" : null}>\n\t\t<input\n\t\t\ttype=\"checkbox\"\n\t\t\tname=\"isCompleted\"\n\t\t\tchecked={this.props.todoItems.isCompleted}\n\t\t\tonChange={this.toggleCheckbox}\n\t\t\t// checked={this.props.todoItems.isChecked}\n\t\t/>\n\t\t<button\n\t\t\tclassName=\"del-btn\"\n\t\t\tonClick={() => this.props.removeToDoItem(this.props.index)}\n\t\t>\n\t\t\tx\n\t\t</button>\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tname=\"todo\"\n\t\t\tvalue={this.props.todoItems.todo}\n\t\t\tonChange={this.handleChange}\n\t\t/>\n\t\t{/* <button>Edit</button> */}\n\t\t\n\t\t</li>\n\t);\n\t}\n}\n\n\nexport default TodoList;\n/*import React from \"react\";\nimport TodoListItem from \"./TodoItem\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class TodoList extends React.Component {\n    render() {\n      var items = this.props.items.map((item, index) => {\n        return (\n          <TodoListItem\n            key={index}\n            item={item}\n            index={index}\n            removeItem={this.props.removeItem}\n            TodoDone={this.props.TodoDone}\n          />\n        );\n      });\n      return <ul className=\"list-group\"> {items} </ul>;\n    }\n  }*/","import React from 'react';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>TODO List</h1>\n        </header>\n    )\n}\n\nconst headerStyle = {\n    \n    color: 'white',\n    background:'#2894FF',\n    width:'160px'\n}\n\n\nexport default Header;","import { List } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./todoform\";\nimport TodoList from \"./todolist\";\nimport Title from \"./ToDoTitle\"\n\n\nclass App extends Component {\n    state = {\n        todoItems: {}\n    };\n\n    addToDoItems = item => {\n        const items = { ...this.state.todoItems };\n        console.log(items);\n        items[`item${Date.now()}`] = item;\n        this.setState({\n        todoItems: items\n        });\n    };\n\n    removeToDoItem = item => {\n        const todos = { ...this.state.todoItems };\n        delete todos[item];\n        this.setState({ todoItems: todos });\n    };\n\n    updateTodos = (key, updatedTodo) => {\n        const todos = { ...this.state.todoItems };\n        todos[key] = updatedTodo;\n        this.setState({ todoItems: todos });\n    };\n\n    render() {\n        return (\n        <div className=\"main\" >\n            <Title/>\n            <TodoForm addToDoItems={this.addToDoItems} />\n            <ul>\n            {Object.keys(this.state.todoItems).map(key => (\n                <TodoList\n                key={key}\n                index={key}\n                todoItems={this.state.todoItems[key]}\n                removeToDoItem={this.removeToDoItem}\n                updateTodos={this.updateTodos}\n                />\n            ))}\n            </ul>\n            \n        </div>\n        );\n    }\n}\nconst list = {\n    \n    paddingleft:'200px',\n    marginright:'auto',\n \n}\n\n\n  \n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}